# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   annotations:
#     kompose.cmd: kompose convert
#     kompose.version: 1.22.0 (955b78124)
#   creationTimestamp: null
#   labels:
#     io.kompose.service: db
#   name: db
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       io.kompose.service: db
#   strategy:
#     type: Recreate
#   template:
#     metadata:
#       annotations:
#         kompose.cmd: kompose convert
#         kompose.version: 1.22.0 (955b78124)
#       creationTimestamp: null
#       labels:
#         io.kompose.service: db
#     spec:
#       containers:
#         - args:
            # - --default_authentication_plugin=mysql_native_password
            # - --character-set-server=utf8mb4
            # - --collation-server=utf8mb4_unicode_ci
#           env:
            # - name: MYSQL_DATABASE
            #   value: flaskshop
            # - name: MYSQL_ROOT_PASSWORD
            #   value: root
#           image: mysql:8.0
#           name: db
#           resources: {}
#           volumeMounts:
#             - mountPath: /var/lib/mysql
#               name: db-data
#       restartPolicy: Always
#       volumes:
#         - name: db-data
#           persistentVolumeClaim:
#             claimName: db-data
# status: {}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  labels:
    app: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - image: mysql:8.0
          name: db
          args:
            - --default_authentication_plugin=mysql_native_password
            - --character-set-server=utf8mb4
            - --collation-server=utf8mb4_unicode_ci
          env:
            - name: MYSQL_DATABASE
              value: flaskshop
            - name: MYSQL_ROOT_PASSWORD
              value: root
          ports:
            - containerPort: 3306
              # name: mysql
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/mysql
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: db-data